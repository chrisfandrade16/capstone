# Generated by Django 4.1.5 on 2023-02-13 18:07

import datetime
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_agenda.time_span
import recurrence.fields
import shop.models
import timezone_field.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('time_estimate', models.DurationField()),
                ('price_estimate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('message', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='Conversation', max_length=200)),
                ('email_notify', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('ignored_by', models.ManyToManyField(blank=True, related_name='ignored_conversations', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('recurrence', recurrence.fields.RecurrenceField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timezone', timezone_field.fields.TimeZoneField(default='EST')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='accounts.employee')),
            ],
            options={
                'verbose_name_plural': 'availabilities',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateTimeField(auto_now=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=1800))),
                ('padding', models.DurationField(blank=True, default=datetime.timedelta(0), verbose_name='padding')),
                ('time', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='primary time_slot')),
                ('time_secondary', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='secondary time_slot')),
                ('state', models.CharField(choices=[('UNC', 'Unconfirmed'), ('DCL', 'Declined'), ('EXP', 'Expired'), ('CNF', 'Confirmed'), ('CMP', 'Completed'), ('CAN', 'Canceled'), ('MIS', 'Missed')], db_index=True, default='UNC', max_length=3)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='accounts.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('editted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(max_length=1024)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='shop.conversation')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('notice_type', models.CharField(choices=[('quote', 'quote'), ('appointment', 'appointment'), ('message', 'message')], max_length=20)),
                ('detail', models.TextField(blank=True, max_length=256, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('new', 'New'), ('used', 'Used'), ('oem', 'Original Equipment Manufacturer (OEM)'), ('aftermarket', 'Aftermarket')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('canceled', 'Canceled'), ('pending', 'Pending'), ('booked', 'Booked')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('buid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('archived', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('comments', models.OneToOneField(default=shop.models.default_conversation, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.conversation')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('email', models.EmailField(max_length=75, unique=True)),
                ('phone', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{3}-\\d{4}$')])),
                ('hours', models.CharField(max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True)),
                ('employees', models.ManyToManyField(blank=True, related_name='employees', to='accounts.employee')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='accounts.shopowner')),
            ],
        ),
        migrations.CreateModel(
            name='ShopService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('est_time', models.DurationField(default=0)),
                ('canned', models.BooleanField(default=False)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.service')),
            ],
        ),
        migrations.CreateModel(
            name='vehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('vehicle_type', models.CharField(choices=[('bus', 'Bus'), ('car', 'Car'), ('truck', 'Truck'), ('motorcycle', 'Motorcycle'), ('trailer', 'Trailer')], max_length=25)),
                ('years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='WorkBay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity', models.IntegerField(null=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.shop')),
            ],
        ),
        migrations.CreateModel(
            name='WorkBayAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('recurrence', recurrence.fields.RecurrenceField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timezone', timezone_field.fields.TimeZoneField()),
                ('workbay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='shop.workbay')),
            ],
            options={
                'verbose_name_plural': 'availabilities',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkBayReservation',
            fields=[
                ('auto_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField(db_index=True)),
                ('approved', models.BooleanField(default=False)),
                ('bookee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workbay_reservation', to='accounts.shopowner')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='shop.workbay')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('work_description', models.TextField(blank=True, max_length=500)),
                ('note', models.TextField(blank=True, max_length=500)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.appointment')),
                ('services', models.ManyToManyField(to='shop.shopservice')),
            ],
        ),
        migrations.CreateModel(
            name='WorkBayTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(db_index=True)),
                ('busy', models.BooleanField(db_index=True, default=False)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='shop.workbayreservation')),
                ('padding_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='padded_by', to='shop.workbaytimeslot')),
                ('workbay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='shop.workbay')),
            ],
            options={
                'verbose_name_plural': 'time slots',
                'abstract': False,
            },
            bases=(models.Model, django_agenda.time_span.AbstractTimeSpan),
        ),
        migrations.CreateModel(
            name='WorkBayAvailabilityOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(db_index=True)),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='shop.workbayavailability')),
                ('workbay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_occurrences', to='shop.workbay')),
            ],
            options={
                'verbose_name': 'availability occurrence',
                'verbose_name_plural': 'availability occurrences',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('vin', models.CharField(blank=True, max_length=17)),
                ('plate_number', models.CharField(blank=True, max_length=10)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.vehiclemodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customer')),
            ],
        ),
        migrations.AddField(
            model_name='shop',
            name='services',
            field=models.ManyToManyField(blank=True, to='shop.shopservice'),
        ),
        migrations.CreateModel(
            name='QuoteService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('est_time', models.DurationField(default=0)),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='shop.quote')),
            ],
        ),
        migrations.CreateModel(
            name='QuoteRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('part_preference', models.TextField(choices=[('any', 'No preference'), ('new', 'New'), ('used', 'Used'), ('oem', 'Original Equipment Manufacturer (OEM)'), ('aftermarket', 'Aftermarket')], default='any', max_length=50)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('availability', models.TextField(blank=True, max_length=500)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customer')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.shop')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='quote',
            name='quote_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.quoterequest'),
        ),
        migrations.AddField(
            model_name='quote',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.shop'),
        ),
        migrations.CreateModel(
            name='MessageEdits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('message', models.TextField(max_length=1024)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edits', to='shop.message')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='make',
            name='models',
            field=models.ManyToManyField(related_name='maker', to='shop.vehiclemodel'),
        ),
        migrations.CreateModel(
            name='LastRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_read_at', models.DateTimeField(default=datetime.datetime.now)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_read', to='shop.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImageQuote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='quote_images/')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.quoterequest')),
                ('uploader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(db_index=True)),
                ('busy', models.BooleanField(db_index=True, default=False)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='shop.employeereservation')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='accounts.employee')),
                ('padding_for', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='padded_by', to='shop.employeetimeslot')),
            ],
            options={
                'verbose_name_plural': 'time slots',
                'abstract': False,
            },
            bases=(models.Model, django_agenda.time_span.AbstractTimeSpan),
        ),
        migrations.CreateModel(
            name='EmployeeAvailabilityOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(db_index=True)),
                ('end', models.DateTimeField(db_index=True)),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='shop.employeeavailability')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_occurrences', to='accounts.employee')),
            ],
            options={
                'verbose_name': 'availability occurrence',
                'verbose_name_plural': 'availability occurrences',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='shop.quote'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.employeereservation'),
        ),
        migrations.CreateModel(
            name='QuoteNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.notification')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.quote')),
            ],
            bases=('shop.notification',),
        ),
        migrations.CreateModel(
            name='ChatNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.notification')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.conversation')),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.quote')),
            ],
            bases=('shop.notification',),
        ),
    ]
